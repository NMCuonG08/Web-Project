<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Edit Newspaper</title>

    <!-- Bootstrap CSS (4.x) -->
    <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">

    <!-- jQuery & Bootstrap JS -->
    <script src="https://code.jquery.com/jquery-3.5.1.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.bundle.min.js"></script>

    <!-- Summernote CSS/JS -->
    <link href="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote.min.css" rel="stylesheet">
    <style>
        /* Cố định vị trí thanh công cụ */
        .note-toolbar {
            position: sticky;
            top: 0;
            z-index: 1000; /* Đảm bảo thanh công cụ nằm trên các phần tử khác */
            background: white; /* Nền trắng cho thanh công cụ */
            box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* Đổ bóng cho thanh công cụ */
        }
    </style>
    <script src="https://cdn.jsdelivr.net/npm/summernote@0.8.18/dist/summernote.min.js"></script>
</head>
<body>
    <div class="container mt-5">
        <h1 class="text-center mb-4">Newspaper Editor</h1>
        <input type="text" id="title" class="form-control mb-3" placeholder="Enter article title">
        <div id="summernote"></div>
        <button id="save" class="btn btn-primary mt-3">Save Article</button>
    </div>

 <script>
  // Mảng để lưu các hình ảnh tạm thời
  const imagesToUpload = [];

  // Initialize Summernote
  $('#summernote').summernote({
    placeholder: 'Write your article here...',
    tabsize: 2,
    height: 1000,
    callbacks: {
      onImageUpload: function(files) {
        for (let file of files) {
          uploadImage(file);
        }
      }
    }
  });

  function uploadImage(file) {
    
    const objectURL = URL.createObjectURL(file);
    imagesToUpload.push(file);
    $('#summernote').summernote('insertImage', objectURL);
    
    setTimeout(() => URL.revokeObjectURL(objectURL), 1000);
  }

 $('#save').on('click', function() {
  const title = $('#title').val();
  let content = $('#summernote').summernote('code');

  // Giả định rằng bạn sẽ lấy hình ảnh từ mảng imagesToUpload
  const uploadPromises = imagesToUpload.map(file => uploadToCloud(file));

  Promise.all(uploadPromises)
    .then(imageUrls => {
      
      imageUrls.forEach((url, index) => {
         const blobPattern = /src="blob:[^"]+"/; // Mẫu regex cho Blob
          content = content.replace(blobPattern, `src="${url}"`);
        
      });
      saveArticle(title, content);
    })
    .catch(console.error);
});

  function saveArticle(title, content) {
    return $.ajax({
      url: '/save-article',
      method: 'POST',
      contentType: 'application/json',
      data: JSON.stringify({ title, content }),
    }).then(() => alert('Article saved successfully!'))
      .catch(() => alert('Error saving article!'));
  }

  function uploadToCloud(file) {
    return new Promise((resolve, reject) => {
      const formData = new FormData();
      formData.append('file', file);
      
      $.ajax({
        url: '/upload-image',
        method: 'POST',
        data: formData,
        processData: false,
        contentType: false,
        success: response => resolve(response.imageUrl),
        error: reject
      });
    });
  }
</script>

</body>
</html>
